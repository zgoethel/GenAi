@using GenAi.Backend
@using GenAi.Backend.ViewModels
@using Markdig
@using System.Web
@inject IJSRuntime js

<div class="@ClassList" @ref="@div">

    <div class="d-flex flex-column gap-2 rounded border p-3 pb-0 shadow-sm"
        style="background: @Vm.Color;">

        @if (!string.IsNullOrEmpty(Vm.Label))
        {
            <strong class="chat-label">@Vm.Label</strong>
        }

        @if (string.IsNullOrEmpty(Vm.Content))
        {
            <div class="spinner-border mb-2" role="status">
            </div>            
        }
        <span>@((MarkupString)Html)</span>

    </div>

</div>

@code {
    [Parameter]
    public ChatMessageViewModel Vm { get; set; } = new();

    private string Html => Markdown.ToHtml(/*HttpUtility.HtmlEncode(*/Vm.Content/*)*/);

    private ElementReference div;
    private bool refocus = true;
    private bool shouldRender = true;

    protected override bool ShouldRender() => shouldRender || refocus;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Vm.Changed += async () =>
        {
            refocus = true;
            shouldRender = true;
            await InvokeAsync(StateHasChanged);
        };
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        shouldRender = false;

        await base.OnAfterRenderAsync(firstRender);

        if (refocus)
        {
            _ = Task.Run(async () =>
            {
                try
                {
                    await Task.Delay(200);
                    refocus = false;

                    await js.InvokeVoidAsync("scrollElementIntoView", div);
                } catch (Exception)
                {
                }
            });
        }
    }

    private IEnumerable<string> AppliedClasses()
    {
        yield return "chat-item";
        if (Vm.AutoCollapse)
        {
            yield return "auto-collapse";
        }
        yield return Vm.Label == SD.Labels.PrefixUser ? "ps-5" : "pe-5";
    }
    private string ClassList => string.Join(" ", AppliedClasses());
}
